{
  "swagger": "2.0",
  "info": {
    "description": "This document describes all Find it Backend API Endpoints",
    "title": "Find It Backend APIs",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "This section describes all Authentication related endpoints"
    },
    {
      "name": "Users",
      "description": "This section describes all Users related endpoints"
    },
    {
      "name": "Services",
      "description": "This section describes all Services related endpoints"
    }
  ],
  "$schema": ["http", "https"],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "description": "Register a new User",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "name",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "User name",
            "example": "Bill Gates"
          },
          {
            "name": "email",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "User email",
            "example": "bill.gates@gmail.com"
          },
          {
            "name": "password",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "User password",
            "example": "password123"
          }
        ],
        "response": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "description": "Login with an existing User",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "User email",
            "example": "bill.gates@gmail.com"
          },
          {
            "name": "password",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "User password",
            "example": "password123"
          }
        ],
        "response": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": ["Users"],
        "description": "List all existing Users.",
        "response": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/api/users/:id": {
      "get": {
        "tags": ["Users"],
        "description": "Show an User by its ID.",
        "response": {
          "200": {
            "description": "success"
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "description": "Update an User by its ID.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "user id",
            "in": "url",
            "required": true,
            "type": "string",
            "description": "user_id"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "jwt token"
          },
          {
            "name": "name",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "User name",
            "example": "Bill Gates"
          },
          {
            "name": "email",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "User email",
            "example": "bill.gates@gmail.com"
          },
          {
            "name": "location",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "User location",
            "example": "Campinas, SP"
          },
          {
            "name": "phone",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "User phone",
            "example": "+55 19 99999-9999"
          },
          {
            "name": "occupation",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "User occupation",
            "example": "Software Developer"
          },
          {
            "name": "about_me",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "User about me",
            "example": "I am a software engineer with experience in backend using Node.js + Express"
          },
          {
            "name": "user_photo",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "User user photo",
            "example": "https://github.com/billgates.png"
          }
        ],
        "response": {
          "200": {
            "description": "success"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "description": "Delete an User by its ID.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "User id",
            "in": "url",
            "required": true,
            "type": "string",
            "description": "user_id"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "jwt token"
          }
        ],
        "response": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/api/services": {
      "get": {
        "tags": ["Services"],
        "description": "List all existing Services.",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Service category in order to filter result"
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Service location in order to filter result"
          }
        ],
        "response": {
          "200": {
            "description": "success"
          }
        }
      },
      "post": {
        "tags": ["Services"],
        "description": "Create a Service passing User ID in the Body.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "jwt token"
          },
          {
            "name": "user_id",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "user id",
            "example": "2e0313fb-fe0f-4dfb-a3e1-df0692762973"
          },
          {
            "name": "title",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "service title",
            "example": "Windows Training"
          },
          {
            "name": "category",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "Service category",
            "example": "IT"
          },
          {
            "name": "description",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "service description",
            "example": "I need someone to teach me how to use windows 11"
          },
          {
            "name": "price",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "Service price",
            "example": "50"
          },
          {
            "name": "location",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "Service location",
            "example": "Campinas, SP"
          }
        ],
        "response": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/api/services/:id": {
      "get": {
        "tags": ["Services"],
        "description": "Show a Service by its ID.",
        "parameters": [
          {
            "name": "user_id",
            "in": "url",
            "required": true,
            "type": "string",
            "description": "User ID"
          }
        ],
        "response": {
          "200": {
            "description": "success"
          }
        }
      },
      "put": {
        "tags": ["Services"],
        "description": "Update an existing Service by its ID.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "jwt token"
          },
          {
            "name": "title",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "service title",
            "example": "Windows Training"
          },
          {
            "name": "category",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "Service category",
            "example": "IT"
          },
          {
            "name": "description",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "service description",
            "example": "I need someone to teach me how to use windows 11"
          },
          {
            "name": "price",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "Service price",
            "example": "50"
          },
          {
            "name": "location",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "Service location",
            "example": "Campinas, SP"
          }
        ],
        "response": {
          "200": {
            "description": "success"
          }
        }
      },
      "delete": {
        "tags": ["Services"],
        "description": "Delete an existing Service by its ID.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "jwt token"
          },
          {
            "name": "user_id",
            "in": "url",
            "required": true,
            "type": "string",
            "description": "User ID"
          }
        ],
        "response": {
          "200": {
            "description": "success"
          }
        }
      }
    }
  }
}
